# process names are case-insensitive but also require the application binary name to match correctly. eg, ${process_binary}: ${proccess_name}
# device names are case-sensitive and are in the format: reeemiks.device: ${device_name}~${pipewire_node_name}
# If you can't get the name correct then running in verbose mode will print all the applications and the devices (called sinks) reeemiks can find.
# you can use 'master' to indicate the master channel, or a list of process names to create a group
# you can use 'mic' to control your mic input level (uses the default recording device)
# you can use 'reeemiks.unmapped' to control all apps that aren't bound to any slider (this ignores master, system, mic and device-targeting sessions)
# important: slider or knob indexes start at 0, regardless of which analog pins you're using!
slider_mapping:
  0:
    #- reeemiks.unmapped
    - 'reeemiks.device: Catch-all input~input.loopback_group_default'
    # - 'Audio Stream: SDL Application'
  1:
    #- 'chrome: google chrome'
    #- 'chrome (deleted): Google Chrome'
    # - 'Music input: input.loopback_group_music'
    - 'reeemiks.device: Music input~input.loopback_group_music'
  2:
    # - 'ts3client_linux_amd64: TeamSpeak'
    # - 'discord: webrtc voiceengine'
    # - 'discordptb: webrtc voiceengine'
    # - 'discordcanary: webrtc voiceengine'
    # - 'Voice input: input.loopback_group_voice'
    - 'reeemiks.device: Voice input~input.loopback_group_voice'
  3:
    # - 'wine64-preloader: runescape client'
    # - 'discord: chromium'
    # - 'discordptb: chromium'
    # - 'discordcanary: chromium'
    # - 'Low Priority input: input.loopback_group_low_prio_games'
    - 'reeemiks.device: Low Priority input~input.loopback_group_low_prio_games'
  4: master

# supported button list https://github.com/micmonay/keybd_event/blob/master/keybd_windows.go (scroll down)
# be sure to convert hex values to decimal (hex values start with 0x)
# for example: to get F13 (0x7C + 0xFFF)
# 0x7C  = 124
# 0xFFF = 4095
# 124 + 4095
# F13 = 4219
#
# MAKE SURE THE NUMBER OF BUTTONS IN THE CONFIG MATCHES THE NUMBER OF BUTTONS REPORTED BY THE ARDUINO
# If the number of buttons is not the same, deej might crash
#
button_mapping:
  0: 4228
  1: 4272
  2: 4274
  3: 4271
  4: 4229
  5: 4230

# set this to true if you want the controls inverted (i.e. top is 0%, bottom is 100%)
invert_sliders: true

# settings for connecting to the arduino board
com_port: /dev/serial/by-id/usb-SparkFun_SparkFun_Pro_Micro-if00
baud_rate: 9600

# settings for hid_listen (qmk)
enable_hid_listen: false

# settings for connecting to HID device
vendor_id: 0x23F2
product_id: 0x78E3
usage_page: 0xFF60
usage: 0x61

# adjust the amount of signal noise reduction depending on your hardware quality
# supported values are "low" (excellent hardware), "default" (regular hardware) or "high" (bad, noisy hardware)
noise_reduction: low

